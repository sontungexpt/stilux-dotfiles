#!/bin/bash

NO='\033[0m' # No Color
BLUE='\033[1;34m'
RED='\033[1;31m'

CONFIG_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/wallpaper"
DATA_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/$USER/wallpaper"
CACHE_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/$USER/wallpaper"
LOCKSCREEN="$DATA_DIR/lockscreen.png"
SCREEN_RESOLUTION=$(xdpyinfo | awk '/dimensions:/ {print $2}')

display_help() {
	echo -e "${BLUE}INFORMATION:${NO}"
	echo -e "  This script is written by TranVoSonTung"
	echo -e "  This script is used to set the wallpaper of i3wm"
	echo -e "  Dependencies: feh i3 imagemagick"

	echo -e "\n${BLUE}USAGE:${NO}"
	echo -e "  setbg <path_to_image>"

	message='''
  # Set lockscreen
  set $lockscreen ${XDG_DATA_HOME:-$HOME/.local/share}/$USER/wallpaper/lockscreen.png
  exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock -e -t -i $lockscreen --nofork

  # Lockscreen keybinding
  bindsym $mod+x exec i3lock -e -t -i  $lockscreen

  # Display Wallpaper
  exec --no-startup-id which setbg >> /dev/null 2>&1 && exec setbg "default" --no-fehbg &
  '''
	echo -e "\n${BLUE}SETUP:${NO}"
	echo -e "  Add all lines below to ~/.config/i3/config:"
	echo -e "$message"

	echo -e "\n${BLUE}OPTIONS:${NO}"
	echo -e "  -h, --help         show help"

	echo -e "\n${BLUE}EXAMPLES:${NO}"
	echo -e "  setbg --help"
	echo -e "  setbg ~/Pictures/wallpaper.jpg"
}

if [[ "$#" -eq 0 ]] || [[ "$1" == "-h" ]] || [[ "$1" = "--help" ]]; then
	display_help
	exit 0
fi

display_error() {
	echo -e "${RED}ERROR:${NO} $1"
	echo -e "${BLUE}MORE:${NO}Use setbg --help or setbg -h to get more information"
}

DEPENDENCIES=(feh i3 sha256sum stat awk readlink convert identify)
for i in "${DEPENDENCIES[@]}"; do
	if ! command -v "$i" &>/dev/null; then
		display_error "This script requires $i to run."
		exit 1
	fi
done

file_path="$1"
shift
fehopts="$@"
[ ! -d "$DATA_DIR" ] && mkdir -p "$DATA_DIR"

notify() {
	[ -x "$(command -v dunstify)" ] && dunstify "$@" -a "setbg-script"
}

set_bg_with_feh() {
	if [[ $2 == "-s" ]] || [[ $2 == "--silent" ]]; then
		feh --bg-fill "$1" "$fehopts"
	else
		feh --bg-fill "$1" "$fehopts" && notify "Wallpaper changed to $1" -i "$1"
	fi
}

is_valid_resolution() {
	identify -format "%wx%h" "$1" | grep -q "$SCREEN_RESOLUTION" >/dev/null 2>&1
}

is_png() {
	identify -format "%m" "$1" | grep -q "PNG" >/dev/null 2>&1
}

convert_image() {
	convert "$1" -resize "$SCREEN_RESOLUTION^" -gravity center -extent "$SCREEN_RESOLUTION" "$2" >/dev/null 2>&1
}

create_lockscreen_from() {
	if command -v i3lock >/dev/null 2>&1; then
		if [[ -f "$1" ]] && is_png "$1" && is_valid_resolution "$1"; then
			cp "$1" "$LOCKSCREEN"
		else
			convert_image "$1" "$LOCKSCREEN"
		fi
		if [[ "$2" == "-s" ]] || [[ "$2" == "--silent" ]]; then
			return
		fi
		notify 'Lockscreen image update successfully. Use setbg --help to know how to setup lockscreen for i3lock' -i "$LOCKSCREEN"
	fi
}

if [[ -f "$file_path" ]]; then
	case "$(basename "$file_path" | tr '[:upper:]' '[:lower:]')" in
	*.jpg | *.jpeg | *.png | *.tiff | *.gif | *.bmp | *.pnm | *.tga | *.xpm)

		HASH=$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$file_path")" | sha256sum | awk '{print $file_path}')
		WALLPAPER="$DATA_DIR/$HASH.png"
		WALLPAPER_CACHE="$CACHE_DIR/$HASH.png"

		cache() {
			[ ! -d "$CACHE_DIR" ] && mkdir -p "$CACHE_DIR"
			find "$DATA_DIR" -maxdepth 1 -type f -name "*.png" -not -wholename "$LOCKSCREEN" -exec mv {} "$CACHE_DIR" \;
		}

		if [ ! -f "$WALLPAPER" ]; then # wallpaper is changing
			if [ -f "$WALLPAPER_CACHE" ]; then
				set_bg_with_feh "$WALLPAPER_CACHE" # change wallpaper immediately
				cache
				mv "$WALLPAPER_CACHE" "$WALLPAPER" # update new wallpaper
			else
				if is_valid_resolution "$file_path"; then
					set_bg_with_feh "$file_path"
					cache
					cp "$file_path" "$WALLPAPER"
				else
					cache
					convert_image "$file_path" "$WALLPAPER"
					set_bg_with_feh "$WALLPAPER"
				fi
			fi
			create_lockscreen_from "$WALLPAPER"
		fi
		;;
	*)
		display_error "File $file_path is not a valid image."
		exit 1
		;;
	esac
else
	alt_image=$(find "$DATA_DIR" "$CONFIG_DIR" -type f \( -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" -o -name "*.gif" \) -not -name "*lockscreen*" -print -quit)
	if [ -f "$alt_image" ]; then
		set_bg_with_feh "$alt_image" -s
		if [ ! -f "$LOCKSCREEN" ]; then
			create_lockscreen_from "$alt_image" -s
		fi
	fi
fi
